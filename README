<!-- Bootstrap Docs: -->
https://getbootstrap.com/docs/5.3/getting-started/introduction/

<!-- To run flask app -->
flask --app makenmodel --debug run --host 0.0.0.0 --port 8000


<!-- LOGIN FOR TEST USER -->
    username: test_user
    password: Password1!


<!-- PYTHON SCRAPERS EXPLANATION -->

    conversion_scraper.py
        TO RUN:
            $ python3 Python_Scrapers/conversion_scraper.py

        - This program scrapes the website: https://www.modelshade.com/paint-conversion-chart/tamiya
        - Gathers the conversions from Tamiya Paint colors to other brands of paint

    paint_scraper.py
        TO RUN:
            $ python3 Python_Scrapers/paint_scraper.py

        - This program scrapes the website: https://www.scalemates.com/colors/?ranges=all
        - This gathers all available paints a user could possibly have
            - This is used to autofill suggestions when a user is adding paints to their collection
            - Also used as a reference when a conversion needs to be made from a Tamiya Paint to a paint of another brand
        - Scraped data is stored in JSON format
            - File located at:
                scraping_data/paint_scrape_data.json

    pdf_analyzer.py
        TO RUN:
            $ python3 Python_Scrapers/pdf_analyzer.py

        TODO: EXPLANATION

    transfer_to_database.py
        TO RUN:
            $ python3 Python_Scrapers/transfer_to_database.py

        - This program transfers all the scraped information gathered from paint_scraper.py to our sqlite3 database
        - This allows us to access the data in a quick way using SQL queries instead of parsing a 10,000 line JSON file
        - ONLY RUN ONCE after paint_scraper.py is run


<!-- langtest.py -->

    TODO: DREW

    TO RUN: -----
        $

    - This is used to .......



<!-- DATA folder -->

    This folder holds all of the extraneous data that we need/use in our program

    - golden_standard.txt
        - This file is our golden_standard for training and testing the accuracy of our instruction classifier algorithm

    - scale_rating.txt
        - Models come in several scales, and typically the larger the model, the more difficult it is
        - This file maps common scale sizes to a value between 0-1 based on how much we interpret the scale to impact the difficulty of the model
        - If the 